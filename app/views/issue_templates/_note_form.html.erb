<%
  element_id = type
  if type == 'template_edit_journal'
    element_id = "template_journal_#{@journal.id}_notes"
  end
  project_id = issue&.project_id
  tracker_id = issue&.tracker_id
%>
<div id="<%= element_id %>">
  <label for="select_note_template" style="font-weight: bold;">
    <%=h l(:label_template_for_note, default: 'Template for note') %>
  </label>
  <a class="icon template_tooltip" id='link_<%= element_id %>_dialog' href="#<%= element_id %>_dialog">
    <%=h l(:display_and_filter_issue_templates_in_dialog, default: 'Filter Templates') %>
  </a>
  <!-- dialog box -->
  <div id="<%= element_id %>_dialog" class="overlay">
    <div class="popup">
      <h2><%=h l(:label_template_for_note, default: 'Select template for note') %></h2>
      <a class="close" href="#">&times;</a>
      <div class="filtered_templates_list">
        <!-- Replaced contemts -->
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">

let element_id = "<%= element_id %>";
let select_id = "select_" + "<%= element_id %>";
let content = document.querySelectorAll('#' + element_id);

// Show dialog
let dialog_link = document.getElementById('link_<%= element_id %>_dialog');
let base_template_list_url = '<%= url_for(controller: 'note_templates',
        action:'list_templates') %>';

let base_tracker_id = <%= tracker_id %>;
let base_project_id = <%= project_id %>;

let load_note_template_url = '<%= load_note_templates_path %>'

if (content.length == 1) {
  if (element_id == 'template_issue_notes') {
    element = content[0].closest('fieldset');
    element.insertBefore(content[0], element.firstChild);
  } else {
    element = content[0].closest('form');
    element.insertBefore(content[0], element.firstChild);
  }
}

function setNoteDescription(target, value) {
  let element = document.getElementById(target);
  if (element.value.length === 0) {
    element.value = value;
  } else {
    element.value += '\n\n' + value;
  }
  element.focus();

  try {
    if (CKEDITOR.instances.issue_notes) {
      CKEDITOR.instances.issue_notes.setData(value);
      CKEDITOR.instances.issue_notes.focus();
    }
  } catch (e) {
    // do nothing.
  }
}

dialog_link.addEventListener("click", function() {
  changeNoteTemplateList(base_template_list_url)
}, false);

function applyNoteTemplate(targetElement) {
  let template_id = targetElement.dataset.noteTemplateId
  let load_url = targetElement.dataset.noteTemplateLoadUrl
  let JSONdata = {
    note_template: { note_template_id: template_id }
  };
  let token = document.querySelectorAll('#issue-form input[name="authenticity_token"]')[0];
  let req = new XMLHttpRequest();
  req.onreadystatechange = function() {
    let container = targetElement.closest('div.overlay');
    let target = container.id.replace('template_', '');
    target = target.replace('_dialog', '');
    if (req.readyState == 4) {
      if (req.status == 200) {
        let value = JSON.parse(req.responseText);
        setNoteDescription(target, value.note_template.description);
      }
    }
  }
  req.open('POST', load_url, true);
  req.setRequestHeader('X-CSRF-Token', token.value);
  req.setRequestHeader("Content-Type", "application/json");
  req.send(JSON.stringify(JSONdata));
}

function changeNoteTemplateList(base_template_list_url) {
  let token = document.querySelectorAll('#issue-form input[name="authenticity_token"]')[0];

  let project_id = document.getElementById('issue_project_id').value
  let tracker_id = document.getElementById('issue_tracker_id').value
  let template_list_url = base_template_list_url
  if (tracker_id != undefined && project_id != undefined) {
    template_list_url += '?tracker_id=' + tracker_id
    template_list_url += '&project_id=' + project_id
  } else {
    template_list_url += '?tracker_id=' + base_tracker_id + '&project_id=' + base_project_id
  }

  let req = new XMLHttpRequest();
  req.onreadystatechange = function() {
    if (req.readyState == 4) {
      if (req.status == 200) {
        let value = req.responseText;
        // replace here!
        let target = document.querySelectorAll('#<%= element_id %>_dialog .popup .filtered_templates_list')[0];
        target.innerHTML = value;
      }
    }
  }
  req.open('GET', template_list_url, true);
  req.setRequestHeader('X-CSRF-Token', token.value);
  req.send();
}
</script>
